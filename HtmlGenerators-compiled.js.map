{"version":3,"sources":["HtmlGenerators.js"],"names":[],"mappings":"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","file":"HtmlGenerators-compiled.js","sourcesContent":["/**\r\n * Created by Ahmad Sharif on 16/8,Aug/2016.\r\n */\r\n\r\njQuery.fn.tagName = function () {\r\n    return this.prop(\"tagName\");\r\n};\r\n\r\njQuery.fn.isTagName = function (tagName) {\r\n    return this.tagName() == tagName.toUpperCase();\r\n};\r\n\r\nfunction ul(lis) {\r\n    var t = \"<ul>\";\r\n    angular.forEach(lis, function (li) {\r\n        if (!$(li).isTagName(\"li\")) li = window.li(li);\r\n        t += li;\r\n    });\r\n    t += \"</ul>\";\r\n    return t;\r\n}\r\n\r\nfunction li(content) {\r\n    var t = \"<li>\" +\r\n        content +\r\n        \"</li>\";\r\n    return t;\r\n}\r\n\r\nfunction ulWithHeader(header, lis) {\r\n    if (!header) return ul(lis);\r\n    var t = \"<ul>\" +\r\n        \"<li>\" +\r\n        header +\r\n        ul(lis) +\r\n        \"</li>\" +\r\n        \"</ul>\";\r\n    return t;\r\n}\r\n\r\nfunction innerUlWithHeader(header, lis) {\r\n    var t = \"<li>\" +\r\n        header +\r\n        ul(lis) +\r\n        \"</li>\";\r\n    return t;\r\n}\r\n\r\nfunction checkbox(label, attrs) {\r\n    var t = \"<label>\" +\r\n        \"<input type='checkbox' \";\r\n    for (var key in attrs) {\r\n        var attr = attrs[key];\r\n        if (angular.isUndefined(attr)) attr = \"\";\r\n        t +=\r\n            key +\r\n            \"=\\\"\" +\r\n            attr +\r\n            \"\\\"\" +\r\n            \" \";\r\n    }\r\n    t += \">\" +\r\n        label +\r\n        \"</label>\";\r\n    return t;\r\n}\r\n\r\nvar checkboxTreeObject = {\r\n    label: \"My master checkbox\",\r\n    attrs: {},\r\n    class: \"\",\r\n    content: []\r\n};\r\n\r\nclass ElementTemplate {\r\n    constructor(label = \"\", attrs = {}, className = \"\") {\r\n        this.initial = {\r\n            label,\r\n            attrs,\r\n            className\r\n        };\r\n        this.template = angular.copy(this.initial);\r\n    }\r\n\r\n    setLabel(label = \"\") {\r\n        this.template.label = label;\r\n    }\r\n\r\n    setAttrs(attrs = {}) {\r\n        this.template.attrs = attrs;\r\n    }\r\n\r\n    setClass(className = \"\") {\r\n        this.template.className = className;\r\n    }\r\n\r\n    getLabel() {\r\n        return this.template.label;\r\n    }\r\n\r\n    getAttrs() {\r\n        return this.template.attrs;\r\n    }\r\n\r\n    getClass() {\r\n        return this.template.className;\r\n    }\r\n\r\n    getTemplate() {\r\n        return this.template;\r\n    }\r\n}\r\n\r\nclass CheckboxTemplateObject extends ElementTemplate {\r\n    constructor(label = \"\", attrs = {}, className = \"\", ...children) {\r\n        let parent = super(label, attrs, className).initial;\r\n        parent.children = [];\r\n        this.children = children;\r\n        for (var i in children)\r\n            parent.children.push(children[i].getTemplate());\r\n\r\n        this.initial = parent;\r\n        this.template = angular.copy(parent);\r\n    }\r\n\r\n    setChildren(...children) {\r\n        this.template.children = children;\r\n    }\r\n\r\n    getChildren() {\r\n        return this.children;\r\n    }\r\n\r\n    addChild(child) {\r\n        this.template.children.push(child);\r\n    }\r\n\r\n    isCheckboxMaster() {\r\n        return this.template.children.length > 0;\r\n    }\r\n\r\n    /*@Override*/\r\n    getTemplate() {\r\n        if (this.isCheckboxMaster() && this.getLabel() == \"\" && this.getAttrs() == {}) {\r\n            return this.template.children;\r\n        }\r\n        else return super.getTemplate();\r\n    }\r\n}\r\n\r\n\r\nclass ChildrenArray extends Array {\r\n    constructor(...children) {\r\n        super(children);\r\n\r\n        this.i = 0;\r\n    }\r\n\r\n    getNext() {\r\n        if (this.i == this.length - 1) return false;\r\n        this.i++;\r\n        return this[this.i];\r\n    }\r\n\r\n    generateCheckboxTreeArray() {\r\n        var result = [];\r\n        angular.forEach(this, function (child) {\r\n            if (child.isCheckboxMaster()) {\r\n                // let subChildren = new ChildrenArray(...child.getChildren());\r\n                let subArray = [];\r\n\r\n                for (x of this.getNext()){\r\n                    subArray.push(li(checkbox(x.label,x.attrs)))\r\n                }\r\n\r\n                result.push(\r\n                    innerUlWithHeader(\r\n                        checkbox(child.getLabel(), child.getAttrs())\r\n                    )\r\n                )\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nclass CheckboxTreeLevel {\r\n\r\n    /**@param checkboxTemplateObject this parameter should be a CheckboxTemplateObject\r\n     * */\r\n    constructor(checkboxTemplateObject) {\r\n\r\n        var template = checkboxTemplateObject.getTemplate();\r\n        this.result = \"\";\r\n\r\n\r\n        if (angular.isArray(template)) {\r\n\r\n        } else if (angular.isObject(template)) {\r\n\r\n\r\n            this.result =\r\n                ulWithHeader(\r\n                    checkbox(template.label, template.attrs), []\r\n                )\r\n        }\r\n    }\r\n}"]}